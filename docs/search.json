[{"path":"https://tuottavuuslautakunta.github.io/fiprod/articles/main.html","id":"talouskasvun-ja-tuottavuuskehityksen-tiedot","dir":"Articles","previous_headings":"","what":"Talouskasvun ja tuottavuuskehityksen tiedot","title":"Talouskasvu ja tuottavuus","text":"Päälähteenä käytetty OECD productivity database:n tietoja (tietokannan uudistus ja metadata). Toimialoille hintatasotiedot ovat GGDC Productivity level tietokannasta. OECD koodit: V Käypähintainen LR Kiinteähintainen, perusvuosi 2020 (lisäksi L, jossa perusvuosi vaihteleva).","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/articles/main.html","id":"bktn-kasvu","dir":"Articles","previous_headings":"","what":"BKT:n kasvu","title":"Talouskasvu ja tuottavuus","text":"","code":"dat_oecd_pdb_main |>    filter(time >= \"1995-01-01\") |>    filter_recode(     geo = geos,     measure = c(\"GDPPOP\"),     activity = c(\"Koko talous\" = \"_T\"),     price_base = c(\"LR\"),        #      conversion_type = c(\"PPP\")   ) |>    select(-unit_measure) |>    mutate(values = rebase(values, time, baseyear = 2007), .by = where(is.factor)) |>    ggplot(aes(time, values, colour = geo, linewidth = geo)) +   geom_line() +   scale_linewidth_manual(values = geos_width) +   the_title_blank(\"xyl\") +   labs(     title = \"BKT per capita\",     subtitle = \"Indeksi, 2007 = 100\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   )"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/articles/main.html","id":"kasvu-jaettuna-tuottavuuteen-ja-työtunteihin","dir":"Articles","previous_headings":"","what":"Kasvu jaettuna tuottavuuteen ja työtunteihin","title":"Talouskasvu ja tuottavuus","text":"","code":"dat_oecd_pdb_main |>    filter(time >= \"1995-01-01\") |>    filter_recode(     geo = geos,     measure = c(\"Työn tuottavuus\" = \"GVAHRS\", \"Tunnit per capita\" = \"HRSPOP\"),     activity = c(\"Koko talous\" = \"_T\"),     unit_measure = c(\"USD_PPP_H\", \"H_PS\"),     price_base = c(\"LR\", \"_Z\"),             conversion_type = c(\"PPP\", \"_Z\")   ) |>    select(-unit_measure) |>    mutate(values = rebase(values, time, baseyear = 2007), .by = where(is.factor)) |>    ggplot(aes(time, values, colour = geo)) +   facet_wrap(~measure) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"BKT per capita\",     subtitle = \"Indeksi, 2007 = 100\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   )"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/articles/main.html","id":"työn-tuottavuuden-kasvu-yksityisellä-sektorilla-ja-muualla","dir":"Articles","previous_headings":"","what":"Työn tuottavuuden kasvu yksityisellä sektorilla ja muualla","title":"Talouskasvu ja tuottavuus","text":"OECD:n tiedoissa virhe. Muut pitäisi olla nolla, mutta tiedoissa Teollisuus sisältää vain tehdasteollisuuden.","code":"dat_gva_ind |>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVAHRS\"),     activity = c(\"Koko talous\" = \"_T\", \"Yksityinen sektori\" = \"BTNXL\"),     vars = c(\"fp_2020_ppp17\")   ) |>    mutate(values = rebase(values, time, baseyear = 2007), .by = where(is.factor)) |>    filter(geo != \"DK\") |>    filter_recode(     geo = geos   ) |>     ggplot(aes(time, values, colour = geo)) +   facet_wrap(~ activity, nrow = 1) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"Työn tuottavuus, arvonlisä / työtunnit\",     subtitle = \"Indeksi, 2007 = 100\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   ) dat_gva_ind |>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVAHRS\"),     activity = c(\"Kiinteistöala\" = \"L\", \"Julkinen\" = \"OTQ\", \"Muut palvelut\" = \"RTU\"),     vars = c(\"fp_2020_ppp17\")   ) |>    mutate(values = rebase(values, time, baseyear = 2007), .by = where(is.factor)) |>    filter(geo != \"DK\") |>    filter_recode(     geo = geos   ) |>     ggplot(aes(time, values, colour = geo)) +   facet_wrap(~ activity, nrow = 1) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"Työn tuottavuus, arvonlisä / työtunnit\",     subtitle = \"Indeksi, 2007 = 100\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   ) dat_gva_ind|>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVAHRS\"),     activity = c(\"Teollisuus\" = \"BTE\", \"Rakentaminen\" = \"F\",\"Yksityiset palvelut\" = \"GTNXL\"),     vars = c(\"fp_2020_ppp17\")   ) |>    mutate(values = rebase(values, time, baseyear = 2007), .by = where(is.factor)) |>    filter(geo != \"DK\") |>    filter_recode(     geo = geos   ) |>     ggplot(aes(time, values, colour = geo)) +   scale_y_continuous(limits = c(50, 150)) +   facet_wrap(~ activity) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"Työn tuottavuus, arvonlisä / työtunnit\",     subtitle = \"Indeksi, 2007 = 100\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   ) dat_gva_ind |>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVA\"),     activity = c(\"_T\", \"BTNXL\", \"L\", \"OTQ\", \"RTU\"),     vars = c(\"cp\")   ) |>    mutate(values = 100 * values / values[activity == \"_T\"] , .by = !c(activity, values)) |>    filter_recode(     geo = geos,     activity = c(\"Yksityinen sektori\" = \"BTNXL\", \"Kiinteistöala\" = \"L\", \"Julkinen\" = \"OTQ\", \"Muut palvelut\" = \"RTU\")) |>    ggplot(aes(time, values, colour = activity)) +   facet_wrap(~ geo, nrow = 1) +   geom_line() +   scale_x_date(date_labels = \"%y\") +   the_title_blank(\"xyl\") +   labs(     title = \"Osuus arvonlisäyksestä\",     subtitle = \"%\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   ) dat_gva_ind |>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVA\"),     activity = c(\"_T\", \"A\", \"BTE\", \"F\", \"GTNXL\", \"L\", \"OTQ\", \"RTU\"),     vars = c(\"cp\")   ) |>    spread(activity, values) |>    rowwise() |>    mutate(Muut = `_T` - sum(c_across(all_of(c(\"A\", \"BTE\", \"F\", \"GTNXL\", \"L\", \"OTQ\", \"RTU\"))), na.rm = TRUE),          Muut = if_else(Muut == `_T`, NA, Muut)) |>    ungroup() |>    pivot_longer(where(is.numeric), names_to = \"activity\", values_to = \"values\") |>    mutate(values = 100 * values / values[activity == \"_T\"] , .by = !c(activity, values)) |>    filter_recode(     geo = geos,     activity = c(\"Teollisuus\" = \"BTE\", \"Rakentaminen\" = \"F\",\"Yksityiset palvelut\" = \"GTNXL\", \"Kiinteistöala\" = \"L\", \"Julkisluonteiset\" = \"OTQ\", \"Muut palvelut\" = \"RTU\", \"Maatalous\" = \"A\", \"Muut\")) |>    ggplot(aes(time, values, colour = activity)) +   facet_wrap(~ geo, nrow = 1) +   geom_line() +   scale_x_date(date_labels = \"%y\") +   the_title_blank(\"xyl\") +   labs(     title = \"Osuus arvonlisäyksestä\",     subtitle = \"%\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   ) dat_gva_ind |>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVA\", \"GVAHRS\"),     activity = c(\"_T\", \"BTE\", \"F\", \"GTNXL\", \"BTNXL\", \"L\", \"OTQ\", \"RTU\", \"A\"),     vars = c(\"cp\")   ) |>    spread(activity, values) |>    rowwise() |>    mutate(Muut = `_T` - sum(c_across(all_of(c(\"A\", \"BTE\", \"F\", \"GTNXL\", \"L\", \"OTQ\", \"RTU\"))), na.rm = TRUE),          Muut = if_else(Muut == `_T`, NA, Muut)) |>    ungroup() |>    pivot_longer(where(is.numeric), names_to = \"activity\", values_to = \"values\") |>    spread(measure, values) |>    mutate(HRS = GVA / GVAHRS) |>    select(-GVA, -GVAHRS) |>    pivot_longer(HRS, names_to = \"measure\", values_to = \"values\") |>    mutate(values = 100 * values / values[activity == \"_T\"] , .by = !c(activity, values)) |>    filter_recode(     geo = geos, activity = c(\"Teollisuus\" = \"BTE\", \"Rakentaminen\" = \"F\",\"Yksityiset palvelut\" = \"GTNXL\", \"Kiinteistöala\" = \"L\", \"Julkisluonteiset\" = \"OTQ\", \"Muut palvelut\" = \"RTU\", \"Maatalous\" = \"A\", \"Muut\")) |>    ggplot(aes(time, values, colour = activity)) +   facet_wrap(~ geo, nrow = 1) +   geom_line() +   scale_x_date(date_labels = \"%y\") +   the_title_blank(\"xyl\") +   labs(     title = \"Osuus työtunneista\",     subtitle = \"%\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   )"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/articles/main.html","id":"muut-kuin-yksityisen-sektorin-toimialat","dir":"Articles","previous_headings":"","what":"Muut kuin yksityisen sektorin toimialat","title":"Talouskasvu ja tuottavuus","text":"","code":"dat_gva_ind |>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVAHRS\"),     activity = c(\"Kiinteistöala\" = \"L\", \"Julkinen\" = \"OTQ\", \"Muut palvelut\" = \"RTU\"),     vars = c(\"fp_2020_ppp17\")   ) |>    mutate(values = rebase(values, time, baseyear = 2007), .by = where(is.factor)) |>    filter(geo != \"DK\") |>    filter_recode(     geo = geos   ) |>     ggplot(aes(time, values, colour = geo)) +   facet_wrap(~ activity, nrow = 1) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"Työn tuottavuus, arvonlisä / työtunnit\",     subtitle = \"Indeksi, 2007 = 100\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   )"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/articles/main.html","id":"yksityinen-sektori-jaettuna","dir":"Articles","previous_headings":"","what":"Yksityinen sektori jaettuna","title":"Talouskasvu ja tuottavuus","text":"","code":"dat_gva_ind|>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVAHRS\"),     activity = c(\"Teollisuus\" = \"BTE\", \"Rakentaminen\" = \"F\",\"Yksityiset palvelut\" = \"GTNXL\"),     vars = c(\"fp_2020_ppp17\")   ) |>    mutate(values = rebase(values, time, baseyear = 2007), .by = where(is.factor)) |>    filter(geo != \"DK\") |>    filter_recode(     geo = geos   ) |>     ggplot(aes(time, values, colour = geo)) +   scale_y_continuous(limits = c(50, 150)) +   facet_wrap(~ activity) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"Työn tuottavuus, arvonlisä / työtunnit\",     subtitle = \"Indeksi, 2007 = 100\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   )"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/articles/main.html","id":"osuudet","dir":"Articles","previous_headings":"","what":"Osuudet","title":"Talouskasvu ja tuottavuus","text":"OECD:n tiedoissa virhe. Muut pitäisi olla nolla, mutta tiedoissa Teollisuus sisältää vain tehdasteollisuuden.","code":"dat_gva_ind |>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVA\"),     activity = c(\"_T\", \"BTNXL\", \"L\", \"OTQ\", \"RTU\"),     vars = c(\"cp\")   ) |>    mutate(values = 100 * values / values[activity == \"_T\"] , .by = !c(activity, values)) |>    filter_recode(     geo = geos,     activity = c(\"Yksityinen sektori\" = \"BTNXL\", \"Kiinteistöala\" = \"L\", \"Julkinen\" = \"OTQ\", \"Muut palvelut\" = \"RTU\")) |>    ggplot(aes(time, values, colour = activity)) +   facet_wrap(~ geo, nrow = 1) +   geom_line() +   scale_x_date(date_labels = \"%y\") +   the_title_blank(\"xyl\") +   labs(     title = \"Osuus arvonlisäyksestä\",     subtitle = \"%\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   ) dat_gva_ind |>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVA\"),     activity = c(\"_T\", \"A\", \"BTE\", \"F\", \"GTNXL\", \"L\", \"OTQ\", \"RTU\"),     vars = c(\"cp\")   ) |>    spread(activity, values) |>    rowwise() |>    mutate(Muut = `_T` - sum(c_across(all_of(c(\"A\", \"BTE\", \"F\", \"GTNXL\", \"L\", \"OTQ\", \"RTU\"))), na.rm = TRUE),          Muut = if_else(Muut == `_T`, NA, Muut)) |>    ungroup() |>    pivot_longer(where(is.numeric), names_to = \"activity\", values_to = \"values\") |>    mutate(values = 100 * values / values[activity == \"_T\"] , .by = !c(activity, values)) |>    filter_recode(     geo = geos,     activity = c(\"Teollisuus\" = \"BTE\", \"Rakentaminen\" = \"F\",\"Yksityiset palvelut\" = \"GTNXL\", \"Kiinteistöala\" = \"L\", \"Julkisluonteiset\" = \"OTQ\", \"Muut palvelut\" = \"RTU\", \"Maatalous\" = \"A\", \"Muut\")) |>    ggplot(aes(time, values, colour = activity)) +   facet_wrap(~ geo, nrow = 1) +   geom_line() +   scale_x_date(date_labels = \"%y\") +   the_title_blank(\"xyl\") +   labs(     title = \"Osuus arvonlisäyksestä\",     subtitle = \"%\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   ) dat_gva_ind |>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVA\", \"GVAHRS\"),     activity = c(\"_T\", \"BTE\", \"F\", \"GTNXL\", \"BTNXL\", \"L\", \"OTQ\", \"RTU\", \"A\"),     vars = c(\"cp\")   ) |>    spread(activity, values) |>    rowwise() |>    mutate(Muut = `_T` - sum(c_across(all_of(c(\"A\", \"BTE\", \"F\", \"GTNXL\", \"L\", \"OTQ\", \"RTU\"))), na.rm = TRUE),          Muut = if_else(Muut == `_T`, NA, Muut)) |>    ungroup() |>    pivot_longer(where(is.numeric), names_to = \"activity\", values_to = \"values\") |>    spread(measure, values) |>    mutate(HRS = GVA / GVAHRS) |>    select(-GVA, -GVAHRS) |>    pivot_longer(HRS, names_to = \"measure\", values_to = \"values\") |>    mutate(values = 100 * values / values[activity == \"_T\"] , .by = !c(activity, values)) |>    filter_recode(     geo = geos, activity = c(\"Teollisuus\" = \"BTE\", \"Rakentaminen\" = \"F\",\"Yksityiset palvelut\" = \"GTNXL\", \"Kiinteistöala\" = \"L\", \"Julkisluonteiset\" = \"OTQ\", \"Muut palvelut\" = \"RTU\", \"Maatalous\" = \"A\", \"Muut\")) |>    ggplot(aes(time, values, colour = activity)) +   facet_wrap(~ geo, nrow = 1) +   geom_line() +   scale_x_date(date_labels = \"%y\") +   the_title_blank(\"xyl\") +   labs(     title = \"Osuus työtunneista\",     subtitle = \"%\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   )"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/articles/main.html","id":"bktn-ja-tuottavuuden-taso","dir":"Articles","previous_headings":"","what":"BKT:n ja tuottavuuden taso","title":"Talouskasvu ja tuottavuus","text":"BKT:n ja tuottavuuden kasvua helpompi vertailla kuin tasoa, sillä maissa eri hintasot ja myös valuuttakurssit vaihtelevat paljon. Perusvuosi 2020","code":"dat_oecd_pdb_main |>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GDPPOP\"),     activity = c(\"Koko talous\" = \"_T\"),     price_base = c(\"LR\"),        #      conversion_type = c(MP = \"_Z\",\"PPP\")   ) |>    select(-unit_measure) |>    spread(conversion_type, values) |>   # Jostain syystä OECD:n tietokannassa ei ole USA:n markkinahintaista dataa, mutta se on sama kuin PPP, koska PPP on suhtesssa USAan   mutate(MP = if_else(geo == \"US\", PPP, MP)) |>   mutate(MP = convert_currency(MP, geo, time, to = \"USD\", base_time = \"2020-01-01\")) |>    pivot_longer(where(is.numeric), names_to = \"conversion_type\", values_to = \"values\") |>   filter_recode(     geo = geos,     conversion_type = c(\"Valuuttakurssi\" = \"MP\", \"Ostovoimapariteetti\" =\"PPP\")   ) |>   ggplot(aes(time, values, colour = geo)) +   facet_wrap(~ conversion_type) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"BKT per capita kiintein hinnoin\",     subtitle = \"Vuoden 2020 USD\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   ) dat_oecd_pdb_main |>    filter(time >= \"1995-01-01\") |>    filter_recode(      measure = c(\"GDPPOP\"),     activity = c(\"Koko talous\" = \"_T\"),     price_base = c(\"V\"),        #      conversion_type = c(MP = \"_Z\",\"PPP\")   ) |>    select(-unit_measure) |>    spread(conversion_type, values) |>    # Jostain syystä OECD:n tietokannassa ei ole USA:n markkinahintaista dataa, mutta se on sama kuin PPP, koska PPP on suhtesssa USAan   # mutate(MP = if_else(geo == \"US\", PPP, MP)) |>    mutate(MP1 = convert_currency(MP, geo, time, to = \"USD\", base_time = \"2020-01-01\")) |>   mutate(MP2 = convert_currency(MP, geo, time, to = \"USD\")) |>    select(-MP) |>    pivot_longer(where(is.numeric), names_to = \"conversion_type\", values_to = \"values\") |>    filter_recode(     geo = geos,     conversion_type = c(\"Valuuttakurssi, vaihtuva\" = \"MP2\",\"Valuuttakurssi 2020\" = \"MP1\" , \"Ostovoimapariteetti 2020\" =\"PPP\")   ) |>   ggplot(aes(time, values, colour = geo)) +   facet_wrap(~ conversion_type) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"BKT per capita nimellisin hinnoin\",     subtitle = \"Vuoden 2020 USD\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   )"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/articles/main.html","id":"kiintein-hinnoin-valuuttakurssilla-ja-ostovoimakorjattuna","dir":"Articles","previous_headings":"","what":"Kiintein hinnoin valuuttakurssilla ja ostovoimakorjattuna","title":"Talouskasvu ja tuottavuus","text":"Perusvuosi 2020","code":"dat_oecd_pdb_main |>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GDPPOP\"),     activity = c(\"Koko talous\" = \"_T\"),     price_base = c(\"LR\"),        #      conversion_type = c(MP = \"_Z\",\"PPP\")   ) |>    select(-unit_measure) |>    spread(conversion_type, values) |>   # Jostain syystä OECD:n tietokannassa ei ole USA:n markkinahintaista dataa, mutta se on sama kuin PPP, koska PPP on suhtesssa USAan   mutate(MP = if_else(geo == \"US\", PPP, MP)) |>   mutate(MP = convert_currency(MP, geo, time, to = \"USD\", base_time = \"2020-01-01\")) |>    pivot_longer(where(is.numeric), names_to = \"conversion_type\", values_to = \"values\") |>   filter_recode(     geo = geos,     conversion_type = c(\"Valuuttakurssi\" = \"MP\", \"Ostovoimapariteetti\" =\"PPP\")   ) |>   ggplot(aes(time, values, colour = geo)) +   facet_wrap(~ conversion_type) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"BKT per capita kiintein hinnoin\",     subtitle = \"Vuoden 2020 USD\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   )"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/articles/main.html","id":"käyvin-hinnoin-valuuttakurssilla-ja-ostovoimakorjattuna","dir":"Articles","previous_headings":"","what":"Käyvin hinnoin valuuttakurssilla ja ostovoimakorjattuna","title":"Talouskasvu ja tuottavuus","text":"","code":"dat_oecd_pdb_main |>    filter(time >= \"1995-01-01\") |>    filter_recode(      measure = c(\"GDPPOP\"),     activity = c(\"Koko talous\" = \"_T\"),     price_base = c(\"V\"),        #      conversion_type = c(MP = \"_Z\",\"PPP\")   ) |>    select(-unit_measure) |>    spread(conversion_type, values) |>    # Jostain syystä OECD:n tietokannassa ei ole USA:n markkinahintaista dataa, mutta se on sama kuin PPP, koska PPP on suhtesssa USAan   # mutate(MP = if_else(geo == \"US\", PPP, MP)) |>    mutate(MP1 = convert_currency(MP, geo, time, to = \"USD\", base_time = \"2020-01-01\")) |>   mutate(MP2 = convert_currency(MP, geo, time, to = \"USD\")) |>    select(-MP) |>    pivot_longer(where(is.numeric), names_to = \"conversion_type\", values_to = \"values\") |>    filter_recode(     geo = geos,     conversion_type = c(\"Valuuttakurssi, vaihtuva\" = \"MP2\",\"Valuuttakurssi 2020\" = \"MP1\" , \"Ostovoimapariteetti 2020\" =\"PPP\")   ) |>   ggplot(aes(time, values, colour = geo)) +   facet_wrap(~ conversion_type) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"BKT per capita nimellisin hinnoin\",     subtitle = \"Vuoden 2020 USD\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   )"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/articles/main.html","id":"tuottavuuden-ja-työtuntien-tasoero","dir":"Articles","previous_headings":"","what":"Tuottavuuden ja työtuntien tasoero","title":"Talouskasvu ja tuottavuus","text":"Selittyykö BKT taso eroa tuottavuudella vai työtunneilla. Työn tuottavuudelle OECD:n tietokannassa arvonlisäys per työtunnit -muuttuja ja työtunneille työtunnit per capita -muuttuja. Selkeästi tasoero tulee työn tuottavuudesta, ei työtunneista. Työn tuottavuuden taso ero Yhdysvaltoihin kuitenkin paljon suurempi kuin BKT per capita, vaikka työntunnit per capita melkein sama. Miksi näin?  Syy tähän Yhdysvaltojen ja Eurostatin erilainen tilastointikäytäntö. BKT työtuntia kohden näyttää erojen osalta samanlaiselta kuin BKT per capita. Arvonlisä työtuntia kohden sen sijaan Yhdysvalloissa selvästi korkeampi kuin EU maissa. Eurooppalaisessa tilinpidossa BKT = arvonlisä + tuoteverot - tukipalkkiot. Yhdysvalloissa BKT ja arvonlisä ovat samoja ja tuoteverot ja tukipalkkiot lasketaan mukaan jo arvonlisätasolla.   BKT:ta voidaan käyttää vai koko talouden osalta. Arvonlisää täytyy käyttää, jos taloutta tarkastellaa toimialoittain tai toimialaryhmittäin. Yksityisen sektorin tuottavuuserot eivät ole yhtä suuria, vaikka käytettäisiin arvonlisää. Yksityisellä sektorilla tarkoitetaan OECD:n tilastossa kohtuullisen luotettavasti mitattavaa osaa taloudesta ja siihen sisältyvät toimialat laajasta teollisuudesta (B, C, E, D), rakentaminen (F) ja markkinapalvelut (G-N pl. L). Siitä jää ulkopuolelle siis maatalous, kiinteistöala, julkisluonteiset palvelut (eli julkinen hallnto, koulutus sekä sosiaali- ja terveyspalvelut. Myös näihin sisältyvät yksitykset palvelut) sekä pienet palvelualat (R, S, T).","code":"dat_oecd_pdb_main |>    filter(time >= \"1995-01-01\") |>    filter_recode(     geo = geos,     measure = c(\"Työn tuottavuus\" = \"GVAHRS\", \"Tunnit per capita\" = \"HRSPOP\"),     activity = c(\"Koko talous\" = \"_T\"),     unit_measure = c(\"USD_PPP_H\", \"H_PS\"),     price_base = c(\"LR\", \"_Z\"),             conversion_type = c(\"PPP\", \"_Z\")   ) |>    select(-unit_measure) |>    ggplot(aes(time, values, colour = geo)) +   facet_wrap(~measure, scales = \"free\") +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"Työn tuottavuus ja työtunnit\",     subtitle = \"Indeksi, 2007 = 100\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   ) dat_oecd_pdb_main |>    filter(time >= \"1995-01-01\") |>    filter_recode(     geo = geos,     measure = c(\"GVAHRS\", \"GDP\", \"GVA\"),     activity = c(\"Koko talous\" = \"_T\"),     unit_measure = c(\"USD_PPP_H\", \"USD_PPP\"),     price_base = c(\"LR\"),             conversion_type = c(\"PPP\")   ) |>   select(-unit_measure) |>    spread(measure, values) |>    mutate(HRS = GVA / GVAHRS,          GDPHRS = GDP / HRS) |>    pivot_longer(where(is.numeric), names_to = \"measure\", values_to = \"values\") |>    filter_recode(     measure = c(\"GDPHRS\", \"GVAHRS\")   ) |>    ggplot(aes(time, values, colour = geo)) +   facet_wrap(~measure) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"BKT ja arvonlisä työtuntia kohden\",     subtitle = \"Osvoimakorjattu 2020 $\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   ) dat_oecd_pdb_main |>    filter(time >= \"1995-01-01\") |>    filter_recode(     geo = geos,     measure = c(\"GDP\", \"GVA\"),     activity = c(\"Koko talous\" = \"_T\"),     # unit_measure = c(\"USD_PPP\"),     price_base = c(\"V\") ,             conversion_type = c(\"PPP\")   ) |>    select(-unit_measure) |>    ggplot(aes(time, values, colour = measure)) +   facet_wrap(~geo, scales = \"free\") +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"BKT ja arvonlisä\",     subtitle = \"Osvoimakorjattu 2020 $\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   ) +   geom_hline(yintercept = 0) dat_oecd_pdb_main |>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVAHRS\"),     activity = c(\"Koko talous\" = \"_T\", \"Yksityinen\" = \"BTNXL\"),     price_base = c(\"LR\"),        #      conversion_type = c(\"_Z\")   ) |>    # group_by(across(where(is.factor))) |>    # mutate(values = rebase(values, time, 2005)) |>    # ungroup() |> |>    mutate(values = convert_currency(values, geo, time, to = \"USD\", base_time = \"2020-01-01\")) |>   filter_recode(     geo = geos   )|>    ggplot(aes(time, values, colour = geo)) +   facet_wrap(~ activity) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"Arvonlisä / työtunnit\",     subtitle = \"2020 $\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   )"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/articles/main.html","id":"oecd-ja-ggdc-ero-pppssä","dir":"Articles","previous_headings":"","what":"OECD ja GGDC ero PPP:ssä","title":"Talouskasvu ja tuottavuus","text":"Toimialoittaiset tiedot hintatasokorjattu käyttämällä GGDC:n Productivity level dabase:n tietoja toimialoittaisista PPP hintatasoista. OECD:n tietokannassa ei ole ostovoimakorjattuja sarjoja toimialaoille. Koko talouden ja toimialaryhmien hinnat aggregoitu arvonlisäpainotettuina keskiarvoina. Seuraavassa tarkasteltu hintatasokorjatun bruttoarvonlisän eroja koko talouden tasolla OECD:n ja GGDC:n PPP tiedoilla laskettuna. Sarjoissa kuuluukin olla pieni ero, koska OECD:n perusvuosi 2020 ja GGDC:n 2017. Tarkastelluilla mailla erot selittyvät juuri perusvuodella.","code":"#  # dat_gva_ind |> str() # dat_oecd_pdb_main |> str()  dat1 <- dat_oecd_pdb_main |>    filter(time >= \"1995-01-01\") |>    filter_recode(     geo = geos,     measure = c(\"GVA\"),     activity = c(\"_T\"),     price_base = c(\"LR\"),        #      conversion_type = c(\"PPP\")   ) |>    select(time, geo, values) |>    mutate(ppp_source = \"oecd\")    dat2 <- dat_gva_ind |>    filter(time >= \"1995-01-01\") |>    filter_recode(     geo = geos,     measure = c(\"GVA\"),     activity = c(\"_T\"),     vars = \"fp_2020_ppp17\"   ) |>    select(time, geo, values) |>    mutate(ppp_source = \"ggdc\")  bind_rows(dat1, dat2) |>    mutate(values = values / 1000) |>    ggplot(aes(time, values, colour = ppp_source)) +   facet_wrap(~geo, scales = \"free\") +   geom_line() +   the_title_blank(\"xyl\") +   the_legend_bot() +   labs(title = \"Bruttoarvonlisä koko taloudessa\",        subtitle = \"Mrd. PPP dollaria 2020 tai 2017 hinnoin\") dat_gva_ind|>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVAHRS\"),     activity = c(\"Koko talous\" = \"_T\", \"Yksityinen\" = \"BTNXL\", \"Julkisluonteinen\" = \"OTQ\"),     vars = c(Valuuttakurssi = \"fp_2020_xr17\", PPP = \"fp_2020_ppp17\")   ) |>    # mutate(values = rebase(values, time, baseyear = 2007), .by = where(is.factor)) |>    filter_recode(     geo = geos   ) |>    ggplot(aes(time, values, colour = geo)) +   # scale_y_continuous(limits = c(50, 150)) +   facet_grid(vars ~ activity) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"Arvonlisä / työtunnit\",     subtitle = \"2017 $, valuuttakurssilla ja ostovoimakorjattuna\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   ) dat_gva_ind|>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVAHRS\"),     activity = c(\"Kiinteistöala\" = \"L\", \"Muut palvelut\" = \"RTU\"),     vars = c(Valuuttakurssi = \"fp_2020_xr17\", PPP = \"fp_2020_ppp17\")   ) |>    # mutate(values = rebase(values, time, baseyear = 2007), .by = where(is.factor)) |>    filter_recode(     geo = geos   ) |>    ggplot(aes(time, values, colour = geo)) +   # scale_y_continuous(limits = c(50, 150)) +   facet_wrap(vars ~ activity, scales = \"free\") +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"Arvonlisä / työtunnit\",     subtitle = \"2017 $, valuuttakurssilla ja ostovoimakorjattuna\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   ) dat_gva_ind|>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVAHRS\"),     activity = c(\"Teollisuus\" = \"BTE\",\"Yksityiset palvelut\" = \"GTNXL\"),     vars = c(\"fp_2020_ppp17\")   ) |>    # mutate(values = rebase(values, time, baseyear = 2007), .by = where(is.factor)) |>    filter_recode(     geo = geos   ) |>    ggplot(aes(time, values, colour = geo)) +   # scale_y_continuous(limits = c(50, 150)) +   facet_wrap(~ activity) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"Arvonlisä / työtunnit\",     subtitle = \"2017 $ ostovoimakorjattuna\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   ) dat_gva_ind|>    filter(time >= \"1995-01-01\") |>    filter_recode(     measure = c(\"GVAHRS\"),     activity = c(\"Teollisuus\" = \"BTE\", \"Rakentaminen\" = \"F\", \"Yksityiset palvelut\" = \"GTNXL\"),     vars = c(Valuuttakurssi = \"fp_2020_xr17\", PPP = \"fp_2020_ppp17\")   ) |>    # mutate(values = rebase(values, time, baseyear = 2007), .by = where(is.factor)) |>    filter_recode(     geo = geos   ) |>    ggplot(aes(time, values, colour = geo)) +   # scale_y_continuous(limits = c(50, 150)) +   facet_grid(vars ~ activity) +   geom_line() +   the_title_blank(\"xyl\") +   labs(     title = \"Arvonlisä / työtunnit\",     subtitle = \"2017 $ ostovoimakorjattuna\",     caption = \"Lähde: OECD, Tuottavuuslautakunta\"   )"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Janne Huovari. Author, maintainer.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Huovari J (2025). fiprod: Finnish Productivity Board Tools. R package version 0.0.2.9000, https://tuottavuuslautakunta.github.io/fiprod/.","code":"@Manual{,   title = {fiprod: Finnish Productivity Board Tools},   author = {Janne Huovari},   year = {2025},   note = {R package version 0.0.2.9000},   url = {https://tuottavuuslautakunta.github.io/fiprod/}, }"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/index.html","id":"fiprod","dir":"","previous_headings":"","what":"Finnish Productivity Board Tools","title":"Finnish Productivity Board Tools","text":"fiprod new packege Finnish Productivity Board data management figure production. old package pRoductivity.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"Finnish Productivity Board Tools","text":"Paketti sisältää valmiiksi esiprosessoituja aineistoja, jotka tuotetaan data-raw/-hakemistossa sijaitsevilla skripteillä. Data kirjoitetaan joko paketin data/-hakemistoon (.rda-objekteina, joita voi ladata data()- tai load()-funktioilla) tai inst/extdata/-hakemistoon Parquet-tiedostoiksi, joita luetaan apufunktiolla load_dat().","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/index.html","id":"oecdn-tuottavuustilastot-data-rawget_oecd_pdbr","dir":"","previous_headings":"Data","what":"OECD:n tuottavuustilastot (data-raw/get_oecd_pdb.R)","title":"Finnish Productivity Board Tools","text":"Skripti hakee OECD Productivity Statistics -tietokannasta koko talouden ja markkinasektorin aggregaatit sekä toimialakohtaiset aikasarjat (mittarit GVA, GDP, GDPPOP, GVAEMP, GVAHRS). Haetut tiedot muunnetaan oecd_clean_data()-funktiolla yhtenäiseen rakenteeseen ja talletetaan Parquet- muotoon inst/extdata/-hakemistoon. Päätaulu dat_oecd_pdb_main.parquet sisältää 21 609 riviä ajanjaksolta 1950–2024 viidelletoista alueelle (EA20 sekä , , DE, DK, ES, FI, FR, , JP, NL, , PT, SE ja US) ja kahdelle aktiviteettiluokalle: _T (koko talous) ja BTNXL (markkinasektori ilman asuntopalveluja). Sarakkeet ovat: time: vuosipäivä (1.1.) muodossa Date. geo: Eurostatin aluekoodi (faktori). measure: tarkasteltava suure (BKT, arvonlisäys, tuottavuus per työntekijä tai per tehty tunti). activity: OECD:n toimialaluokitus (kokonaisuus tai markkinasektori). unit_measure: mittayksikkö, esim. XDC (kansallinen valuutta), USD_PPP (PPP-mukautettu USD), XDC_PS/USD_PPP_PS (per työntekijä) ja XDC_H/USD_PPP_H (per tehty tunti). price_base: hintaperusta, jossa V = käyvin hinnoin, LR = kiinteähintainen (perusvuosi 2020) ja L = ketjutettu volyymi-indeksi. conversion_type: valuuttamuunnos (_Z = markkinavaluuttakurssi, PPP = ostovoimakorjattu). values: mittarin arvo annettua yhdistelmää kohti. Sama skripti tuottaa myös toimialoittaisen taulun dat_oecd_pdb_ind.parquet, jossa activity-sarake kattaa OECD:n aggregoidut toimialat (esim. BTE, F, GTNXL, OTQ, RTU). Molemmat taulut ovat oletuslähteitä paketin visualisointeihin ja ne voidaan lukea esimerkiksi komennolla dat_oecd_pdb_main <- load_dat(\"dat_oecd_pdb_main\").","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/index.html","id":"eurostatin-valuuttakurssit-data-rawget_exchr","dir":"","previous_headings":"Data","what":"Eurostatin valuuttakurssit (data-raw/get_exch.R)","title":"Finnish Productivity Board Tools","text":"Eurostatin ert_bil_eur_a -aineistosta haetaan euroon ankkuroidut vuosikeski- kurssit valuutoille AUD, CAD, CHF, DKK, JPY, NOK, NZD, SEK ja USD. Skripti lisää lisäksi jokaiselle euroalueen maalle (ks. geo_ea) sarjan, jossa arvo aina yksi. Valmis data exh_eur_a tallennetaan R:n .rda-muodossa ja sisältää seuraavat sarakkeet: time (vuosipäivä Date-muodossa), currency (ISO 4217), geo (kaksikirjaiminen aluekoodi) ja values (kuinka monta yksikköä valuuttaa vastaa yhtä euroa). Aineisto kattaa vuodet 1971–2025 ja toimii convert_currency()-apufunktion lähdedatana. Samassa prosessissa syntyy myös geo_ea, joka 20 jäsenen euroalueen (, DE, EE, IE, EL, ES, FR, , CY, LV, LT, LU, MT, NL, , PT, SI, SK, FI, HR) koodiluettelo. Vektori tallennettu .rda-objektina ja sitä käytetään sekä valuuttakonversioissa että muissa euroaluetta rajaavissa kyselyissä.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/index.html","id":"ggdc-productivity-level-database-2023-data-rawread_ggdc_datar","dir":"","previous_headings":"Data","what":"GGDC Productivity Level Database 2023 (data-raw/read_ggdc_data.R)","title":"Finnish Productivity Board Tools","text":"Hakemistossa alkuperäinen pld2023_dataset.xlsx, josta luetaan vuosien 2005–2017 sektorikohtaiset tuottavuusmittarit. Skripti siivoaa sarake- ja maakoodit, muodostaa suomenkieliset nimet (geo_nimi) sekä muuntaa tiedot pitkään muotoon taulukoksi dat_ggdc_23, jossa sarakkeet time, geo, geo_nimi, sector, vars (esim. va, emp, ppp_va, xr) ja values. Aineisto rajataan euroalueen maihin sekä vertailumaihin (SE, DK, , UK, US, JP, CA, AU, NZ) ja tallennetaan Parquet-tiedostona inst/extdata/-hakemistoon. Lisäksi skripti rakentaa taulun dat_ppp_va_ggdc_oecd, jossa GGDC:n sektorit kartoitetaan OECD:n toimialaryhmiin ja lasketaan PPP-kertoimet arvonlisäys- painotettuina. Lähteenä käytetään Groningen Growth Development Centren Productivity Level Database 2023 -tietokannan (Feenstra, Inklaar & Timmer) muuttujia ppp_va (arvonlisäyksen PPP-hintataso) ja va (arvonlisäyksen arvo). Ensin lasketaan euroalueen (EA20) hintataso painottamalla maiden toimialakohtaiset PPP:t maiden arvonlisäyksillä. Tämän jälkeen GGDC:n sektorit ryhmitellään key_oecd_ggdc-avainlistan avulla OECD:n käyttämiin aggregaatteihin (_T, BTNXL, BTE, RTU, jne.), ja kullekin aggregaatille muodostetaan painotettu keskiarvo. Lopputulos aikasarja PPP-kertoimista (perusvuosi 2017) jokaiselle maalle, euroalueelle ja OECD:n toimialaryhmälle, ja sitä hyödynnetään OECD:n ja GGDC:n hintatasotietojen yhdistämisessä.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/index.html","id":"kokoavat-aikasarjat-data-rawdata_mainr","dir":"","previous_headings":"Data","what":"Kokoavat aikasarjat (data-raw/data_main.R)","title":"Finnish Productivity Board Tools","text":"data_main.R kokoaa valmiit Parquet-aineistot analyysia varten. Skripti määrittelee euroalueen maiden luettelon (geo_ea) ja mahdollistaa raakadataskriptien uudelleensuorituksen (get_oecd_pdb.R, get_exch.R) asettamalla update = TRUE. Pääasiallisesti se lataa aiemmin tuotetut taulut dat_oecd_pdb_main, dat_oecd_pdb_ind, dat_ggdc_23 ja dat_ppp_va_ggdc_oecd, joiden pohjalta rakennetaan dat_gva_ind. dat_gva_ind syntyy, kun OECD:n toimialataulusta (dat_oecd_pdb_ind) poimitaan käyvän hintatason (V) ja kiinteähintaisen volyymin (ketjutettu perusvuosi 2020, LR) sarjat. Ne nimetään uudelleen (cp, fp_2020_lc) ja yhdistetään GGDC:n tuottamiin PPP-kertoimiin vuoden 2017 tasolla. Tällöin muodostetaan kaksi lisämuuttujaa: fp_2020_ppp17, joka muuntaa kiinteähintaisen paikallisvaluutan PPP-tasoiseen USD:hen (fp_2020_lc / ppp_va), ja fp_2020_xr17, joka muuntaa saman volyymin markkinakurssiin perustuvaksi USD-arvoksi hyödyntäen convert_currency()-funktiota ja Eurostatin valuuttadataa. Lopuksi tiedot muutetaan pitkäksi muodoksi (vars, values) ja tallennetaan save_dat()- funktiolla Parquet-muotoon, jolloin taulu saatavilla kutsulla load_dat(\"dat_gva_ind\").","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Tuottavuuslautakunta Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/check_factor_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate factor level combinations (by time) against values — check_factor_levels","title":"Tabulate factor level combinations (by time) against values — check_factor_levels","text":"Creates complete cross-tabulation factor variables (excluding drop_vars) unique time points, reports number rows whether non-missing numeric values exist values column combination.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/check_factor_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate factor level combinations (by time) against values — check_factor_levels","text":"","code":"check_factor_levels(df, drop_vars = character())"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/check_factor_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate factor level combinations (by time) against values — check_factor_levels","text":"df data.frame containing: one column named time class Date, one numeric column named values, one factor columns (dimensions). drop_vars Character vector factor column names exclude cross-tabulation. Defaults none.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/check_factor_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate factor level combinations (by time) against values — check_factor_levels","text":"data.frame one row per combination factor levels time, plus n has_numeric columns. Factor columns output retain original levels ordering.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/check_factor_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulate factor level combinations (by time) against values — check_factor_levels","text":"","code":"df <- data.frame(   country = factor(c(\"FI\",\"FI\",\"SE\",\"SE\",\"NO\")),   sector  = factor(c(\"A\",\"B\",\"A\",\"B\",\"A\")),   time    = as.Date(c(\"2020-01-01\",\"2020-01-01\",\"2020-01-01\",\"2021-01-01\",\"2021-01-01\")),   values  = c(1, NA, NA, 3, NA) ) check_factor_levels(df) #> Error in check_factor_levels(df): object 'factor_vars' not found  # Excluding a factor from the grid: check_factor_levels(df, drop_vars = \"sector\") #> Error in check_factor_levels(df, drop_vars = \"sector\"): object 'factor_vars' not found"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/convert_currency.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert national currency values into another currency (with optional baseline date) — convert_currency","title":"Convert national currency values into another currency (with optional baseline date) — convert_currency","text":"Converts values expressed national currency (identified geo) target currency using EUR-anchored exchange rate table. Optionally, base_time can provided conversions use exchange rates single date.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/convert_currency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert national currency values into another currency (with optional baseline date) — convert_currency","text":"","code":"convert_currency(   values,   geo,   time,   to,   exch = exh_eur_a,   euro_geos = c(\"EA\", \"EA19\", \"EA20\"),   base_time = NULL,   warn_if_missing = TRUE )"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/convert_currency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert national currency values into another currency (with optional baseline date) — convert_currency","text":"values Numeric vector values national currency. geo Character factor vector country/area codes (length values). time Date vector observation dates (length values). Target currency code (e.g. \"USD\"). exch Exchange rate table, defaults exh_eur_a. Must contain columns: time (Date), geo (chr), currency (chr), values (numeric), values rate \"1 EUR = values units currency\". euro_geos Character vector geo codes already EUR (default: c(\"EA\",\"EA19\",\"EA20\")). , EUR->nat factor 1. base_time Optional baseline date (Date coercible). supplied, conversions use exchange rates date EUR->nat EUR->. NULL (default), rates taken row's time. warn_if_missing Logical; warn required rates missing. Default TRUE.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/convert_currency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert national currency values into another currency (with optional baseline date) — convert_currency","text":"Numeric vector converted values (length values).","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/convert_currency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert national currency values into another currency (with optional baseline date) — convert_currency","text":"","code":"if (FALSE) { # \\dontrun{ # Per-row dates: df <- dplyr::mutate(df,   values_usd = convert_currency(values, geo, time, to = \"USD\") )  # Using baseline date (e.g., convert everything using 2020-01-01 rates): df <- dplyr::mutate(df,   values_usd_2020 = convert_currency(values, geo, time, to = \"USD\",                                      base_time = as.Date(\"2020-01-01\")) ) } # }"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/load_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a dataset from extdata (installed package) as Parquet — load_dat","title":"Load a dataset from extdata (installed package) as Parquet — load_dat","text":"Reads Parquet file stored package's inst/extdata/ build time. runtime, function first tries system.file(\"extdata\", ...) (works installed packages devtools::load_all()), found, falls back development path inst/extdata/ package root (found via DESCRIPTION).","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/load_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a dataset from extdata (installed package) as Parquet — load_dat","text":"","code":"load_dat(filename, package = NULL, must_work = TRUE)"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/load_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a dataset from extdata (installed package) as Parquet — load_dat","text":"filename File name read (without .parquet). package Package name file resides. Defaults NULL, case function tries infer package name; fails, still try development path inst/extdata/. must_work TRUE (default), error file located.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/load_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a dataset from extdata (installed package) as Parquet — load_dat","text":"data.frame loaded Parquet file.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/load_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a dataset from extdata (installed package) as Parquet — load_dat","text":"","code":"if (FALSE) { # \\dontrun{ # After installation or devtools::load_all(): df <- load_dat(\"mtcars.parquet\")  # During development when not using load_all(), the function can still # locate inst/extdata/ by walking up to DESCRIPTION: df <- load_dat(\"mtcars.parquet\") } # }"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/oecd_clean_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and reshape OECD SDMX data — oecd_clean_data","title":"Clean and reshape OECD SDMX data — oecd_clean_data","text":"function parses dates, converts character columns factors, selects renames specified variables, creates values column obsValues (obsValue), drops columns. warns dropped factor variables one level.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/oecd_clean_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and reshape OECD SDMX data — oecd_clean_data","text":"","code":"oecd_clean_data(df, drop_vars = NULL, vars = c(), freq = \"A\")"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/oecd_clean_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and reshape OECD SDMX data — oecd_clean_data","text":"df data.frame containing OECD SDMX data. vars named character vector specifying variables keep rename, form c(new_name = \"old_name\"). old names must exist df. freq Data frequency: \"\" annual data, \"Q\" quarterly data. Determines date parsing format obsTime column.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/oecd_clean_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and reshape OECD SDMX data — oecd_clean_data","text":"tibble renamed variables vars values column.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/oecd_clean_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean and reshape OECD SDMX data — oecd_clean_data","text":"","code":"if (FALSE) { # \\dontrun{ vars <- c(geo = \"LOCATION\", measure = \"MEASURE\") cleaned <- oecd_clean_data(smdx_data, vars = vars, freq = \"A\") } # }"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/oecd_make_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an OECD Filter String — oecd_make_filter","title":"Create an OECD Filter String — oecd_make_filter","text":"function takes list filtering arguments constructs filter string OECD API call.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/oecd_make_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an OECD Filter String — oecd_make_filter","text":"","code":"oecd_make_filter(x)"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/oecd_make_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an OECD Filter String — oecd_make_filter","text":"x list strings representing different filter criteria OECD API.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/oecd_make_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an OECD Filter String — oecd_make_filter","text":"single string filter criteria concatenated using '+' '.' separators.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/oecd_make_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an OECD Filter String — oecd_make_filter","text":"","code":"make_oecd_filter(list(\"A\", \"sna_geo\", \"\", \"\", \"sna6a_transact\", \"\", \"sna_activity\", \"\", \"\", \"sna_measures\", \"\", \"\")) #> Error in make_oecd_filter(list(\"A\", \"sna_geo\", \"\", \"\", \"sna6a_transact\",     \"\", \"sna_activity\", \"\", \"\", \"sna_measures\", \"\", \"\")): could not find function \"make_oecd_filter\""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/plotly_hidden.html","id":null,"dir":"Reference","previous_headings":"","what":"Customize Plotly chart: keep only download button and preselect geos — plotly_hidden","title":"Customize Plotly chart: keep only download button and preselect geos — plotly_hidden","text":"helper modifies Plotly object (typically created ggplotly) : \"Download PNG\" button shown modebar. Plotly logo hidden. geos listed keep_geos visible start; traces set visible = \"legendonly\".","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/plotly_hidden.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customize Plotly chart: keep only download button and preselect geos — plotly_hidden","text":"","code":"plotly_hidden(p, keep_geos)"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/plotly_hidden.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customize Plotly chart: keep only download button and preselect geos — plotly_hidden","text":"p Plotly object. keep_geos Character vector geo codes visible initially.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/plotly_hidden.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customize Plotly chart: keep only download button and preselect geos — plotly_hidden","text":"modified Plotly object customized modebar visibility.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/plotly_hidden.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customize Plotly chart: keep only download button and preselect geos — plotly_hidden","text":"","code":"if (FALSE) { # \\dontrun{ pp <- ggplot2::ggplot(dat, ggplot2::aes(time, values, colour = geo)) +   ggplot2::geom_line() p <- plotly::ggplotly(pp) p2 <- plotly_hidden(p, keep_geos = c(\"FI\",\"SE\",\"EA20\",\"US\")) p2 } # }"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/plotly_prefade_others.html","id":null,"dir":"Reference","previous_headings":"","what":"Prefade non-selected geos in a Plotly chart and toggle color/legend on click — plotly_prefade_others","title":"Prefade non-selected geos in a Plotly chart and toggle color/legend on click — plotly_prefade_others","text":"Takes Plotly object (e.g., ggplotly), keeps traces listed keep_geos original colors visible legend, renders traces initially light gray color (hidden legend). Clicking gray line toggles original color adds legend; clicking fades back hides .","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/plotly_prefade_others.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prefade non-selected geos in a Plotly chart and toggle color/legend on click — plotly_prefade_others","text":"","code":"plotly_prefade_others(   p,   keep_geos,   gray_color = \"#d3d3d3\",   keep_download_only = TRUE )"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/plotly_prefade_others.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prefade non-selected geos in a Plotly chart and toggle color/legend on click — plotly_prefade_others","text":"p Plotly object created e.g. ggplotly. keep_geos Character vector geo codes start colored visible legend. gray_color Hex color used faded traces (default \"#d3d3d3\"). keep_download_only Logical; TRUE (default) keep \"Download PNG\" button hide Plotly logo.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/plotly_prefade_others.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prefade non-selected geos in a Plotly chart and toggle color/legend on click — plotly_prefade_others","text":"modified Plotly object custom initial styling interactive click handler toggle trace color legend visibility.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/plotly_prefade_others.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prefade non-selected geos in a Plotly chart and toggle color/legend on click — plotly_prefade_others","text":"Trace name detection based trace$name trace$legendgroup stripping common prefixes (e.g. \"geo=\") anything comma.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/plotly_prefade_others.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prefade non-selected geos in a Plotly chart and toggle color/legend on click — plotly_prefade_others","text":"","code":"if (FALSE) { # \\dontrun{ pp <- ggplot2::ggplot(dat, ggplot2::aes(time, values, colour = geo)) +   ggplot2::geom_line() p  <- plotly::ggplotly(pp) p2 <- plotly_prefade_others(p, keep_geos = c(\"FI\",\"SE\",\"EA20\",\"US\")) p2 } # }"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/save_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a dataset to inst/extdata as Parquet (for package build time) — save_dat","title":"Save a dataset to inst/extdata as Parquet (for package build time) — save_dat","text":"Writes data frame package's inst/extdata/ directory , installation, file available system.file(\"extdata\", ...). Intended used development (runtime installation).","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/save_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a dataset to inst/extdata as Parquet (for package build time) — save_dat","text":"","code":"save_dat(   x,   filename = deparse(substitute(x)),   dir = \"inst/extdata\",   overwrite = FALSE )"},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/save_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a dataset to inst/extdata as Parquet (for package build time) — save_dat","text":"x data.frame (tibble) saved. filename File name write. Defaults name x .parquet extension. dir Directory write development. Defaults \"inst/extdata\". directory created exist. overwrite Logical, overwrite existing file (default FALSE).","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/save_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a dataset to inst/extdata as Parquet (for package build time) — save_dat","text":"(Invisibly) path written file.","code":""},{"path":"https://tuottavuuslautakunta.github.io/fiprod/reference/save_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a dataset to inst/extdata as Parquet (for package build time) — save_dat","text":"","code":"if (FALSE) { # \\dontrun{ # During development of the package: save_dat(mtcars) # writes inst/extdata/mtcars.parquet } # }"}]
