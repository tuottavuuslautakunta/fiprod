% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{check_factor_levels}
\alias{check_factor_levels}
\title{Tabulate factor level combinations (by time) against \code{values}}
\usage{
check_factor_levels(df, drop_vars = character())
}
\arguments{
\item{df}{A \code{data.frame} containing:
\itemize{
\item one column named \code{time} of class \code{Date}, and
\item one numeric column named \code{values}, and
\item one or more factor columns (dimensions).
}}

\item{drop_vars}{Character vector of factor column names to exclude from the
cross-tabulation. Defaults to none.}
}
\value{
A \code{data.frame} with one row per combination of factor levels and
\code{time}, plus \code{n} and \code{has_numeric} columns. Factor columns in
the output retain the original levels and ordering.
}
\description{
Creates a complete cross-tabulation over all factor variables (excluding those
in \code{drop_vars}) and all unique time points, and reports the number of rows
and whether any non-missing numeric values exist in the \code{values} column
for each combination.
}
\examples{
df <- data.frame(
  country = factor(c("FI","FI","SE","SE","NO")),
  sector  = factor(c("A","B","A","B","A")),
  time    = as.Date(c("2020-01-01","2020-01-01","2020-01-01","2021-01-01","2021-01-01")),
  values  = c(1, NA, NA, 3, NA)
)
check_factor_levels(df)

# Excluding a factor from the grid:
check_factor_levels(df, drop_vars = "sector")
}
