% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exch_funs.R
\name{convert_currency}
\alias{convert_currency}
\title{Convert national currency values into another currency (with optional baseline date)}
\usage{
convert_currency(
  values,
  geo,
  time,
  to,
  exch = exh_eur_a,
  euro_geos = c("EA", "EA19", "EA20"),
  base_time = NULL,
  warn_if_missing = TRUE
)
}
\arguments{
\item{values}{Numeric vector of values in national currency.}

\item{geo}{Character or factor vector of country/area codes (same length as values).}

\item{time}{Date vector of observation dates (same length as values).}

\item{to}{Target currency code (e.g. "USD").}

\item{exch}{Exchange rate table, defaults to \code{exh_eur_a}. Must contain
columns: \code{time} (Date), \code{geo} (chr), \code{currency} (chr), \code{values} (numeric),
where \code{values} is the rate "1 EUR = values units of currency".}

\item{euro_geos}{Character vector of geo codes that are already in EUR
(default: c("EA","EA19","EA20")). For these, the EUR->nat factor is 1.}

\item{base_time}{Optional baseline date (Date or coercible). If supplied,
all conversions use exchange rates from this date for both EUR->nat and
EUR->to. If \code{NULL} (default), rates are taken at each row's \code{time}.}

\item{warn_if_missing}{Logical; warn when required rates are missing. Default TRUE.}
}
\value{
Numeric vector of converted values (same length as \code{values}).
}
\description{
Converts values expressed in national currency (identified by \code{geo})
into a target currency using an EUR-anchored exchange rate table.
Optionally, a \code{base_time} can be provided so that all conversions use
exchange rates from that single date.
}
\examples{
\dontrun{
# Per-row dates:
df <- dplyr::mutate(df,
  values_usd = convert_currency(values, geo, time, to = "USD")
)

# Using baseline date (e.g., convert everything using 2020-01-01 rates):
df <- dplyr::mutate(df,
  values_usd_2020 = convert_currency(values, geo, time, to = "USD",
                                     base_time = as.Date("2020-01-01"))
)
}
}
